%implements s24_b0_ilroe_3_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
if (%<(SLibCGIRIsSampleHit(1, 6))>) {
    /* {S!d14}SignalConversion generated from: '<S158>/Omega' incorporates:
 *  Constant: '<S158>/Constant'
 */
    *rty_Omega/*@>4d3ff*/ = /*@>7e45d*/0.0;
    /* {S!d16}SignalConversion generated from: '<S158>/Omegadot' incorporates:
 *  Constant: '<S158>/Constant1'
 */
    *rty_Omegadot/*@>4d403*/ = /*@>7e45e*/0.0;
    /* {S!d18}SignalConversion generated from: '<S158>/Myb' incorporates:
 *  Constant: '<S158>/Constant2'
 */
    *rty_Myb/*@>4d407*/ = /*@>7e45f*/0.0;
}
/* {S!d20}UnaryMinus: '<S158>/Unary Minus' */
*rty_ReactionTorque/*@>4d432*/ = -/*@<7e460*//*@>7e874*/rtu_Tout;
%closefile cfgTxt
%<cfgTxt>
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[3].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("Output", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))
%<SLibCG_AccessArg(3, 1, 0)>
%endif
%if SLibCG_ArgAccessed(3, 1, 0)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "Output", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "Output"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(3, 1, 0)>
%endif
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
%function OutputsFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void DrivetrainEv_Locked(\
%assign comma = ""
%if SLibCG_ArgAccessed(3, 1, 0)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("DrivetrainEv_Locked", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%<comma>real_T rtu_Tout\
%assign comma = ", "
%<comma>real_T *rty_ReactionTorque\
%assign comma = ", "
%<comma>real_T *rty_Omega\
%assign comma = ", "
%<comma>real_T *rty_Omegadot\
%assign comma = ", "
%<comma>real_T *rty_Myb\
%assign comma = ", "
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(3, 1, fcnProtoType)>
%endfunction

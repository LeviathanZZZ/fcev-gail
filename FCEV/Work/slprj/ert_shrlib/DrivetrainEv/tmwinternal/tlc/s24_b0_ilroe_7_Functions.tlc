%implements s24_b0_ilroe_7_Functions "C"

%function rt_atan2d_snf_Fcn0(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
real_T y;
int32_T tmp;
int32_T tmp_0;
if (rtIsNaN(u0) || rtIsNaN(u1)) {
    y = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
} else if (rtIsInf(u0) && rtIsInf(u1)) {
    if (u0 > 0.0) {
        tmp = 1;
    } else {
        tmp = -1;
    }
    if (u1 > 0.0) {
        tmp_0 = 1;
    } else {
        tmp_0 = -1;
    }
    y = atan2(tmp, tmp_0);
} else if (u1 == 0.0) {
    if (u0 > 0.0) {
        y = RT_PI / 2.0;
    } else if (u0 < 0.0) {
        y = -(RT_PI / 2.0);
    } else {
        y = 0.0;
    }
} else {
    y = atan2(u0, u1);
}
return y;
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[7].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("rt_atan2d_snf", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "rt_atan2d_snf"))
%<SLibCG_AccessArg(7, 0, 2)>
%endif
%if SLibCG_ArgAccessed(7, 0, 2)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "rt_atan2d_snf", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "rt_atan2d_snf"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(7, 0, 2)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
extern real_T rt_atan2d_snf(\
%assign comma = ""
%<comma>real_T u0\
%assign comma = ", "
%<comma>real_T u1\
%assign comma = ", "
%if SLibCG_ArgAccessed(7, 0, 2)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("rt_atan2d_snf", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(7, 0, fcnProtoType)>
%return fcnBuff
%endfunction

%function automldiffopen_RcYoMae5_Fcn1(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
__m128d tmp;
__m128d tmp_0;
real_T diffDir_0[6];
real_T diffDir_1[6];
real_T invJ_0[6];
real_T invJ[4];
real_T invJ_1[4];
real_T invJ_2[2];
real_T invJ_3[2];
real_T NbdTerm;
real_T NbdTerm_tmp;
real_T term1;
real_T term2;
int32_T diffDir;
int32_T i;
int32_T invJ_tmp;
int32_T invJ_tmp_tmp;
/*@>b9775*/NbdTerm_tmp/*@>b9777*/ = /*@>ae7a2*/Ndiff/*@>aeeba*/ * /*@>ae7a4*/Ndiff;
/*@>ae787*/NbdTerm/*@>350f*/ = /*@>b9779*/NbdTerm_tmp/*@>aeeb6*/ * /*@>ae784*/bd/*@>7843*/ / /*@>ae786*/4.0;
/*@>b66cf*/if (/*@>ae789*/shaftSwitch/*@>7894*/ != /*@>ae78b*/0.0) {
    /*@>b66d3*/diffDir/*@>b66d2*/ = /*@>ca0cf*/-1;
} else {
    /*@>ae876*/diffDir/*@>a99af*/ = /*@>ca0cc*/1;
}
/*@>ae791*/term1/*@>3564*/ = NbdTerm_tmp/*@>aeeae*/ * /*@>ae78f*/Jd;
/*@>ae7a0*/term2/*@>357b*/ = (/*@>ae799*/4.0/*@>aeea6*/ * /*@>ae797*/Jw1/*@>aeea2*/ * /*@>ae79a*/Jw2/*@>793b*/ + /*@>ae793*/term1/*@>aee9e*/ * /*@>ae795*/Jw1)/*@>793f*/ + /*@>ae79c*/Jw2/*@>aeeaa*/ * /*@>ae79e*/term1;
/*@>ae7c3*/invJ/*@>a947c*/[/*@>ae865*/0]/*@>a3e64*/ = (/*@>ae7ad*/Jw2/*@>aee9a*/ * /*@>ae7af*/4.0/*@>a3e30*/ + /*@>ae7b0*/term1)/*@>a3e2f*/ / /*@>ae7b2*/term2;
/*@>b9785*/NbdTerm_tmp/*@>b9787*/ = -/*@<aee97*//*@>ae7b4*/term1/*@>a3e39*/ / /*@>ae7b6*/term2;
/*@>ae7c5*/invJ/*@>a9486*/[/*@>ae866*/2]/*@>a3e7b*/ = /*@>b9789*/NbdTerm_tmp;
/*@>ae7c7*/invJ/*@>a948f*/[/*@>ae867*/1]/*@>a3e92*/ = NbdTerm_tmp;
/*@>ae7c9*/invJ/*@>a9498*/[/*@>ae868*/3]/*@>a3ea9*/ = (/*@>ae7bc*/Jw1/*@>aee94*/ * /*@>ae7be*/4.0/*@>a3e46*/ + /*@>ae7bf*/term1)/*@>a3e45*/ / /*@>ae7c1*/term2;
/*@>b9795*/NbdTerm_tmp/*@>b9797*/ = /*@>b25e5*/(real_T)/*@>ae7cd*/diffDir/*@>a3f63*/ / /*@>ae7cf*/2.0/*@>aee8d*/ * /*@>ae7d0*/Ndiff;
/*@>ae7db*/diffDir_0/*@>a94a3*/[/*@>ae869*/0]/*@>a3f8b*/ = /*@>b9799*/NbdTerm_tmp;
/*@>ae7dd*/diffDir_0/*@>a94ac*/[/*@>ae86a*/2]/*@>a3fa2*/ = /*@>ae7d2*/-1.0;
/*@>ae7df*/diffDir_0/*@>a94b3*/[/*@>ae86b*/4]/*@>a3fb9*/ = /*@>ae7d3*/0.0;
/*@>ae7e1*/diffDir_0/*@>a94ba*/[/*@>ae86c*/1]/*@>a3fd0*/ = NbdTerm_tmp;
/*@>ae7e3*/diffDir_0/*@>a94c3*/[/*@>ae86d*/3]/*@>a3fe7*/ = /*@>ae7d9*/0.0;
/*@>ae7e5*/diffDir_0/*@>a94ca*/[/*@>ae86e*/5]/*@>a3ffe*/ = /*@>ae7da*/-1.0;
/*@>aea12*/term1/*@>a413c*/ = -/*@<aee83*/(/*@>ae7fc*/bw1/*@>a4116*/ + /*@>ae7fe*/NbdTerm);
/*@>aea18*/term2/*@>a4181*/ = -/*@<aee80*/(/*@>ae804*/NbdTerm/*@>a4122*/ + /*@>ae806*/bw2);
/*@>ae838*/diffDir_1/*@>a94fa*/[/*@>ae86f*/0]/*@>a43f0*/ = NbdTerm_tmp;
/*@>ae83a*/diffDir_1/*@>a9503*/[/*@>ae870*/3]/*@>a4407*/ = NbdTerm_tmp;
/*@>a4077*/for (/*@>ca0f7*/diffDir = /*@>ca0f6*/0; /*@>ca101*/diffDir < /*@>ca0ff*/2; /*@>ca0fd*/diffDir/*@>ca116*/++) {
/*@>a4067*/    for (/*@>ca108*/i = /*@>ca107*/0; /*@>ca112*/i < /*@>ca110*/3; /*@>ca10e*/i/*@>ca117*/++) {
        /*@>b97c5*/invJ_tmp_tmp/*@>b97c7*/ = /*@>ae7f8*/i/*@>aef2b*/ << /*@>aef2a*/1;
        /*@>b97b5*/invJ_tmp/*@>b97b7*/ = /*@>ae7f6*/diffDir/*@>a950e*/ + /*@>b97c9*/invJ_tmp_tmp;
        /*@>ae7f4*/invJ_0/*@>a9512*/[/*@>b97b9*/invJ_tmp]/*@>a4084*/ = /*@>ae7f3*/0.0;
        /*@>ae9da*/invJ_0/*@>aaa5a*/[invJ_tmp] += /*@>c5214*/diffDir_0/*@>c5216*/[invJ_tmp_tmp]/*@>b56be*/ * /*@>c521a*/invJ/*@>c521c*/[/*@>c5219*/diffDir];
        /*@>ae9f9*/invJ_0/*@>aaa92*/[invJ_tmp] += /*@>c5222*/diffDir_0/*@>c5224*/[invJ_tmp_tmp/*@>c521e*/ + /*@>c5221*/1]/*@>b56da*/ * /*@>c522a*/invJ/*@>c522c*/[/*@>c5228*/diffDir/*@>c5226*/ + /*@>c5229*/2];
    }
    /*@>ae961*/invJ_1/*@>aa931*/[/*@>ae963*/diffDir]/*@>aa930*/ = /*@>ae965*/0.0;
    /*@>ae974*/invJ_1/*@>aa963*/[/*@>ae976*/diffDir] += /*@>c51aa*/invJ/*@>c51ac*/[/*@>c51a9*/diffDir]/*@>b56f5*/ * /*@>b56fc*/term1;
    /*@>b9805*/NbdTerm_tmp/*@>b9807*/ = /*@>c51b8*/invJ/*@>c51ba*/[/*@>c51b6*/diffDir/*@>c51b4*/ + /*@>c51b7*/2];
    /*@>ae988*/invJ_1/*@>aa996*/[/*@>ae98a*/diffDir] += /*@>b9809*/NbdTerm_tmp/*@>b570a*/ * -/*@<b58a6*//*@>b58a8*/NbdTerm;
    /*@>ae991*/invJ_1/*@>aa9af*/[/*@>ae993*/diffDir/*@>aa9b1*/ + /*@>aea09*/2]/*@>aa9ae*/ = /*@>ae995*/0.0;
    /*@>ae9a4*/invJ_1/*@>aa9e1*/[/*@>ae9a6*/diffDir/*@>aa9e3*/ + /*@>aea0b*/2] += /*@>c523e*/invJ/*@>c5240*/[/*@>c523d*/diffDir]/*@>b5723*/ * -/*@<b58b1*//*@>b58b3*/NbdTerm;
    /*@>ae9b8*/invJ_1/*@>aaa14*/[/*@>ae9ba*/diffDir/*@>aaa16*/ + /*@>aea0e*/2] += NbdTerm_tmp/*@>b5737*/ * /*@>b5740*/term2;
    /*@>ae80d*/invJ_2/*@>a4274*/[/*@>ae80f*/diffDir]/*@>a4278*/ = /*@>ae80c*/0.0;
    /*@>ae929*/invJ_2/*@>aa85a*/[/*@>ae92b*/diffDir] += /*@>c524c*/invJ_0/*@>c524e*/[/*@>c524b*/diffDir]/*@>b574b*/ * /*@>c5252*/u/*@>c5254*/[/*@>c5250*/0];
    /*@>ae940*/invJ_2/*@>aa883*/[/*@>ae942*/diffDir] += /*@>c5260*/invJ_0/*@>c5262*/[/*@>c525e*/diffDir/*@>c525c*/ + /*@>c525f*/2]/*@>b575f*/ * /*@>c5266*/u/*@>c5268*/[/*@>c5264*/1];
    /*@>ae957*/invJ_2/*@>aa8ac*/[/*@>ae959*/diffDir] += /*@>c5274*/invJ_0/*@>c5276*/[/*@>c5272*/diffDir/*@>c5270*/ + /*@>c5273*/4]/*@>b5775*/ * /*@>c527a*/u/*@>c527c*/[/*@>c5278*/2];
    /*@>ae814*/invJ_3/*@>a42e5*/[/*@>ae816*/diffDir]/*@>a42e9*/ = /*@>ae813*/0.0;
    /*@>ae8f8*/invJ_3/*@>aa803*/[/*@>ae8fa*/diffDir] += /*@>c5286*/invJ_1/*@>c5288*/[/*@>c5285*/diffDir]/*@>b578b*/ * /*@>c528c*/x/*@>c528e*/[/*@>c528a*/0];
    /*@>ae90f*/invJ_3/*@>aa82c*/[/*@>ae911*/diffDir] += /*@>c529a*/invJ_1/*@>c529c*/[/*@>c5298*/diffDir/*@>c5296*/ + /*@>c5299*/2]/*@>b579f*/ * /*@>c52a0*/x/*@>c52a2*/[/*@>c529e*/1];
    /*@>c1ce2*/xdot/*@>a432b*/[/*@>ae822*/diffDir]/*@>a432c*/ = /*@>c52ac*/invJ_2/*@>c52ae*/[/*@>c52ab*/diffDir]/*@>a4319*/ + /*@>c52b2*/invJ_3/*@>c52b4*/[/*@>c52b1*/diffDir];
    /*@>ae83c*/diffDir_1/*@>a95d3*/[/*@>ae872*/3/*@>aeec2*/ * /*@>ae83e*/diffDir/*@>a95d2*/ + /*@>ae873*/1]/*@>a4424*/ = /*@>b2703*/(real_T)/*@>ae832*/diffDir/*@>b0bd3*/ - 1.0;
    /*@>ae840*/diffDir_1/*@>a95e0*/[/*@>ae874*/3/*@>aeebc*/ * /*@>ae842*/diffDir/*@>a95df*/ + /*@>ae875*/2]/*@>a4451*/ = /*@>ae837*/0.0/*@>a43da*/ - /*@>b2708*/(real_T)/*@>ae835*/diffDir;
}
for (diffDir = 0; diffDir <= 0; diffDir += 2) {
    tmp = _mm_loadu_pd(&/*@>b8e43*/diffDir_1[/*@>b8e42*/diffDir]);
    tmp_0 = _mm_loadu_pd(&/*@>b8e8f*/diffDir_1[/*@>b8e8d*/diffDir/*@>b8e8b*/ + /*@>b8e8e*/3]);
    _mm_storeu_pd(&/*@>c1ce8*/y/*@>b8f38*/[/*@>b8f3b*/diffDir], _mm_add_pd(_mm_add_pd(_mm_mul_pd(tmp_0, _mm_set1_pd(/*@>c51ea*/x/*@>c51ec*/[/*@>c51e8*/1])), _mm_add_pd(_mm_mul_pd(tmp, _mm_set1_pd(/*@>c51f0*/x/*@>c51f2*/[/*@>c51ee*/0])), _mm_set1_pd(/*@>bacbb*/0.0))), _mm_set1_pd(/*@>babb9*/0.0/*@>babb8*/ * /*@>c51f6*/u/*@>c51f8*/[/*@>c51f4*/2]/*@>babb7*/ + (/*@>babc0*/0.0/*@>babbf*/ * /*@>c51fc*/u/*@>c51fe*/[/*@>c51fa*/1]/*@>babbe*/ + /*@>babc6*/0.0/*@>babc5*/ * /*@>c5202*/u/*@>c5204*/[/*@>c5200*/0]))));
}
/*@>a44c7*/for (/*@>ca0d7*/diffDir = 2; /*@>ca0e1*/diffDir < 3; /*@>ca0dd*/diffDir/*@>ca124*/++) {
    /*@>c1cfa*/y/*@>a457b*/[/*@>ae861*/diffDir]/*@>a457c*/ = (/*@>c51c0*/diffDir_1/*@>c51c2*/[/*@>c51be*/diffDir/*@>c51bc*/ + /*@>c51bf*/3]/*@>babf3*/ * /*@>c51c6*/x/*@>c51c8*/[/*@>c51c4*/1]/*@>babf2*/ + /*@>c51cc*/diffDir_1/*@>c51ce*/[/*@>c51cb*/diffDir]/*@>bacc0*/ * /*@>c51d2*/x/*@>c51d4*/[/*@>c51d0*/0])/*@>a4569*/ + ((/*@>bad54*/0.0/*@>bad53*/ * /*@>c51de*/u/*@>c51e0*/[/*@>c51dc*/1]/*@>bad52*/ + /*@>bad5b*/0.0/*@>bad5a*/ * /*@>c51e4*/u/*@>c51e6*/[/*@>c51e2*/0])/*@>bac01*/ + /*@>bac03*/0.0/*@>bac02*/ * /*@>c51d8*/u/*@>c51da*/[/*@>c51d6*/2]);
}
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[7].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("automldiffopen_RcYoMae5", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "automldiffopen_RcYoMae5"))
%<SLibCG_AccessArg(7, 1, 12)>
%endif
%if SLibCG_ArgAccessed(7, 1, 12)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "automldiffopen_RcYoMae5", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "automldiffopen_RcYoMae5"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(7, 1, 12)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
extern void automldiffopen_RcYoMae5(\
%assign comma = ""
%<comma>const real_T u[3]\
%assign comma = ", "
%<comma>real_T bw1\
%assign comma = ", "
%<comma>real_T bd\
%assign comma = ", "
%<comma>real_T bw2\
%assign comma = ", "
%<comma>real_T Ndiff\
%assign comma = ", "
%<comma>real_T shaftSwitch\
%assign comma = ", "
%<comma>real_T Jd\
%assign comma = ", "
%<comma>real_T Jw1\
%assign comma = ", "
%<comma>real_T Jw2\
%assign comma = ", "
%<comma>const real_T x[2]\
%assign comma = ", "
%<comma>real_T y[3]\
%assign comma = ", "
%<comma>real_T xdot[2]\
%assign comma = ", "
%if SLibCG_ArgAccessed(7, 1, 12)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("automldiffopen_RcYoMae5", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(7, 1, fcnProtoType)>
%return fcnBuff
%endfunction

%function rt_powd_snf_Fcn2(block) void
%assign fcnBuff = ""
%openfile fcnBuff
%assign cfgTxt = ""
%openfile cfgTxt
real_T tmp;
real_T tmp_0;
real_T y;
if (rtIsNaN(u0) || rtIsNaN(u1)) {
    y = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
} else {
    tmp = fabs(u0);
    tmp_0 = fabs(u1);
    if (rtIsInf(u1)) {
        if (tmp == 1.0) {
            y = 1.0;
        } else if (tmp > 1.0) {
            if (u1 > 0.0) {
                y = %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>;
            } else {
                y = 0.0;
            }
        } else if (u1 > 0.0) {
            y = 0.0;
        } else {
            y = %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>;
        }
    } else if (tmp_0 == 0.0) {
        y = 1.0;
    } else if (tmp_0 == 1.0) {
        if (u1 > 0.0) {
            y = u0;
        } else {
            y = 1.0 / u0;
        }
    } else if (u1 == 2.0) {
        y = u0 * u0;
    } else if ((u1 == 0.5) && (u0 >= 0.0)) {
        y = sqrt(u0);
    } else if ((u0 < 0.0) && (u1 > floor(u1))) {
        y = %<LibGetMathConstant(LibRealNonFinite("nan"), FcnGetDataTypeIdFromName("double"))>;
    } else {
        y = pow(u0, u1);
    }
}
return y;
%closefile cfgTxt
%<cfgTxt>
%closefile fcnBuff
%assign rtmArgSys = ::CompiledModel.System[::CompiledModel.System[::CompiledModel.RTWCGModules.RTWCGModule[7].CGSystemIdx].NonInlinedParentSystemIdx]
%if SysFcnArgNeeded("rt_powd_snf", rtmArgSys.Interface.RTMArgDef, rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "rt_powd_snf"))
%<SLibCG_AccessArg(7, 2, 2)>
%endif
%if SLibCG_ArgAccessed(7, 2, 2)
%<SLibAccessArg(rtmArgSys.Interface.RTMArgDef, "rt_powd_snf", rtmArgSys.CurrentTID, FcnSysModuleIsRateGrouping(rtmArgSys, "rt_powd_snf"))>
%endif
%if (IsModelReferenceBaseSys(rtmArgSys) && (IsModelRefScalableBuild() || GenerateClassInterface)) ||...
(GenerateClassInterface && SLibIsMultiInstanceServer(rtmArgSys))
%<SLibCG_UndoAccessArg(7, 2, 2)>
%endif
%assign fcnProtoType = ""
%openfile fcnProtoType
extern real_T rt_powd_snf(\
%assign comma = ""
%<comma>real_T u0\
%assign comma = ", "
%<comma>real_T u1\
%assign comma = ", "
%if SLibCG_ArgAccessed(7, 2, 2)
%<comma>%<::tSimStructType> * const %<::tSimStruct>\
%assign comma = ", "
%<SLibUpdateSymbolForFunction("rt_powd_snf", SLibGetFcnDefinitionRTMSymbolName(), TLC_FALSE)>\
%endif
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(7, 2, fcnProtoType)>
%return fcnBuff
%endfunction

